<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="show_rviz" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find nucobot_gazebo)/worlds/nucobot.world"/> -->
    <arg name="world_name" value="worlds/empty.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find nucobot_description)/urdf/nucobot.urdf.xacro'" />
  

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  
  <node name="nucobot_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model nucobot -param robot_description -z 0.2 -x 1.5 -y 1.5 -R 3.14"/>

  <!-- robot visualization in Rviz -->
  <group if="$(arg show_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find nucobot_description)/launch/gazebo.rviz"/> 
 
    <!-- load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find nucobot_control)/config/joint_position_control.yaml" command="load" />
    <!-- load the controllers -->
    <node name="nucobot_controller" pkg="controller_manager" type="spawner" output="screen" 
      args="joint_state_controller" />
 
    <!-- publish all the frames to TF -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <param name="publish_frequency" value="50"/> <!-- Hz -->
    </node>
  </group>


  
  <!-- ros_control nucobot launch file -->
  <!--include file="$(find nucobot_control)/launch/nucobot_control.launch" /-->

   <!-- Spawn a robot into Gazebo -->
<!-- <node name="spawn_sdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description/sdf/model.sdf -sdf -model nucobot" /> -->
  
</launch>
